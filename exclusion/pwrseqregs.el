//==================================================
// This file contains the Excluded objects
// Generated By User: aradan
// Format Version: 2
// Date: Thu Apr 16 11:00:56 2020
// ExclMode: default
//==================================================
CHECKSUM: "4147662200"
ANNOTATION: "    internal to pwrseqregs, these are auto generated by auto reg, we assume they are already verified and we only check top level toggling    "
INSTANCE:tb.gpu0.chip0.core.udcnc.udpcsc.pwrseq1.upwrseq0.upwrseqregs.upwrseq_pwrseqdebugind_adec
CHECKSUM: "2841255308"
ANNOTATION: "    internal to pwrseqregs, these are auto generated by auto reg, we assume they are already verified and we only check top level toggling    "
INSTANCE:tb.gpu0.chip0.core.udcnc.udpcsc.pwrseq1.upwrseq0.upwrseqregs.upwrseqrdmux
CHECKSUM: "2179871496"
ANNOTATION: "    internal to pwrseqregs, these are auto generated by auto reg, we assume they are already verified and we only check top level toggling    "
INSTANCE:tb.gpu0.chip0.core.udcnc.udpcsc.pwrseq1.upwrseq0.upwrseqregs.upwrseqrb
CHECKSUM: "3338694960"
ANNOTATION: "    internal to pwrseqregs, these are auto generated by auto reg, we assume they are already verified and we only check top level toggling    "
INSTANCE:tb.gpu0.chip0.core.udcnc.udpcsc.pwrseq1.upwrseq0.upwrseqregs.upwrseqadec
CHECKSUM: "1305154445"
ANNOTATION: "    internal to pwrseqregs, these are auto generated by auto reg, we assume they are already verified and we only check top level toggling    "
INSTANCE:tb.gpu0.chip0.core.udcnc.udpcsc.pwrseq1.upwrseq0.upwrseqregs.upwrseq_pwrseqdebugind_rdmux
CHECKSUM: "4147662200"
ANNOTATION: "    internal to pwrseqregs, these are auto generated by auto reg, we assume they are already verified and we only check top level toggling    "
INSTANCE:tb.gpu0.chip0.core.udcnc.udpcsc.pwrseq0.upwrseq0.upwrseqregs.upwrseq_pwrseqdebugind_adec
CHECKSUM: "2841255308"
ANNOTATION: "    internal to pwrseqregs, these are auto generated by auto reg, we assume they are already verified and we only check top level toggling    "
INSTANCE:tb.gpu0.chip0.core.udcnc.udpcsc.pwrseq0.upwrseq0.upwrseqregs.upwrseqrdmux
CHECKSUM: "2179871496"
ANNOTATION: "    internal to pwrseqregs, these are auto generated by auto reg, we assume they are already verified and we only check top level toggling    "
INSTANCE:tb.gpu0.chip0.core.udcnc.udpcsc.pwrseq0.upwrseq0.upwrseqregs.upwrseqrb
CHECKSUM: "1305154445"
ANNOTATION: "    internal to pwrseqregs, these are auto generated by auto reg, we assume they are already verified and we only check top level toggling    "
INSTANCE:tb.gpu0.chip0.core.udcnc.udpcsc.pwrseq0.upwrseq0.upwrseqregs.upwrseq_pwrseqdebugind_rdmux
CHECKSUM: "3338694960"
ANNOTATION: "    internal to pwrseqregs, these are auto generated by auto reg, we assume they are already verified and we only check top level toggling    "
INSTANCE:tb.gpu0.chip0.core.udcnc.udpcsc.pwrseq0.upwrseq0.upwrseqregs.upwrseqadec
CHECKSUM: "2511393817 567721321"
INSTANCE: tb.gpu0.chip0.core.udcnc.udpcsc.pwrseq1.upwrseq0.upwrseqregs
ANNOTATION_BEGIN: " unused "
Toggle oPWRSEQ_TEST_DEBUG_DATA_OUT "net oPWRSEQ_TEST_DEBUG_DATA_OUT[31:0]"
Toggle oQ_PWRSEQ_STRENGTH_SP "net oQ_PWRSEQ_STRENGTH_SP[3:0]"
Toggle Q_PWRSEQ_STRENGTH_SP "net Q_PWRSEQ_STRENGTH_SP[3:0]"
ANNOTATION_END
ANNOTATION: "   there are not that many registers in pwrseq, only 17 => 2^5 "
Toggle iPWRSEQ_ADDR [17:8] "net iPWRSEQ_ADDR[17:2]"
ANNOTATION: " tied to 4'b1111 "
Toggle iPWRSEQ_WBEN "net iPWRSEQ_WBEN[3:0]"
ANNOTATION: " tied to 1 "
Toggle iDISPDEC "net iDISPDEC"
ANNOTATION_BEGIN: " tied to 0 "
Toggle iPWRSEQ_RDDATA "net iPWRSEQ_RDDATA[31:0]"
Toggle iRO_PWRSEQ_TEST_DEBUG_DATA "net iRO_PWRSEQ_TEST_DEBUG_DATA[31:0]"
ANNOTATION_END
ANNOTATION: " tied to 32'h005A5A5A "
Toggle iRO_PWRSEQ_DEBUG_ID "net iRO_PWRSEQ_DEBUG_ID[31:0]"
ANNOTATION_BEGIN: " obsolete feature "
Toggle 1to0 oQ_PANEL_SYNCEN "net oQ_PANEL_SYNCEN"
Toggle oQ_PANEL_SYNCEN_OVRD "net oQ_PANEL_SYNCEN_OVRD"
Toggle 1to0 oQ_PANEL_SYNCEN_POL "net oQ_PANEL_SYNCEN_POL"
Toggle 1to0 Q_PANEL_SYNCEN "net Q_PANEL_SYNCEN"
Toggle Q_PANEL_SYNCEN_OVRD "net Q_PANEL_SYNCEN_OVRD"
Toggle 1to0 Q_PANEL_SYNCEN_POL "net Q_PANEL_SYNCEN_POL"
ANNOTATION_END
ANNOTATION_BEGIN: " default value is 0, so 0->1 testing is good "
Toggle 1to0 oQ_PANEL_DIGON_OVRD "net oQ_PANEL_DIGON_OVRD"
Toggle 1to0 oQ_PANEL_DIGON_POL "net oQ_PANEL_DIGON_POL"
Toggle 1to0 oQ_PANEL_BLON_OVRD "net oQ_PANEL_BLON_OVRD"
Toggle 1to0 Q_PANEL_DIGON_OVRD "net Q_PANEL_DIGON_OVRD"
Toggle 1to0 Q_PANEL_DIGON_POL "net Q_PANEL_DIGON_POL"
Toggle 1to0 Q_PANEL_BLON_OVRD "net Q_PANEL_BLON_OVRD"
ANNOTATION_END
ANNOTATION_BEGIN: " covers everycase should be enough "
Toggle 1to0 oQ_PWRSEQ_DBG_DATA_SEL [1] "net oQ_PWRSEQ_DBG_DATA_SEL[2:0]"
Toggle 1to0 Q_PWRSEQ_DBG_DATA_SEL [1] "net Q_PWRSEQ_DBG_DATA_SEL[2:0]"
ANNOTATION_END
ANNOTATION_BEGIN: " spare register "
Toggle oQ_PWRSEQ_SPARE "net oQ_PWRSEQ_SPARE[31:0]"
Toggle Q_PWRSEQ_SPARE "net Q_PWRSEQ_SPARE[31:0]"
ANNOTATION_END
ANNOTATION: " unused, unconnected "
Toggle oDECODE_NACK "net oDECODE_NACK"
ANNOTATION_BEGIN: " internal to pwrseqregs, these are auto generated by auto reg, we assume they are already verified and we only check top level toggling "
Toggle DECODE_NACK_q1 "reg DECODE_NACK_q1"
Toggle DECODE_NACK_q2 "reg DECODE_NACK_q2"
Toggle DISPDEC_NACK "net DISPDEC_NACK"
Toggle PWRSEQDEBUGIND_ACK "net PWRSEQDEBUGIND_ACK"
Toggle PWRSEQDEBUGIND_NACK "net PWRSEQDEBUGIND_NACK"
Toggle RD_REG_PWRSEQ_TEST_DEBUG_DATA "net RD_REG_PWRSEQ_TEST_DEBUG_DATA"
Toggle 0to1 RD_REG_PWRSEQ_DEBUG_ID "net RD_REG_PWRSEQ_DEBUG_ID"
Toggle DEC_IND_DATA_PWRSEQ_TEST_DEBUG_DATA "net DEC_IND_DATA_PWRSEQ_TEST_DEBUG_DATA"
Toggle Q_PWRSEQ_TEST_DEBUG_DATA "net Q_PWRSEQ_TEST_DEBUG_DATA[31:0]"
ANNOTATION_END
CHECKSUM: "2511393817 567721321"
INSTANCE: tb.gpu0.chip0.core.udcnc.udpcsc.pwrseq0.upwrseq0.upwrseqregs
ANNOTATION_BEGIN: " unused "
Toggle oPWRSEQ_TEST_DEBUG_DATA_OUT "net oPWRSEQ_TEST_DEBUG_DATA_OUT[31:0]"
Toggle oQ_PWRSEQ_STRENGTH_SP "net oQ_PWRSEQ_STRENGTH_SP[3:0]"
Toggle Q_PWRSEQ_STRENGTH_SP "net Q_PWRSEQ_STRENGTH_SP[3:0]"
ANNOTATION_END
ANNOTATION: "   there are not that many registers in pwrseq, only 17 => 2^5 "
Toggle iPWRSEQ_ADDR [17:8] "net iPWRSEQ_ADDR[17:2]"
ANNOTATION: " tied to 4'b1111 "
Toggle iPWRSEQ_WBEN "net iPWRSEQ_WBEN[3:0]"
ANNOTATION: " tied to 1 "
Toggle iDISPDEC "net iDISPDEC"
ANNOTATION_BEGIN: " tied to 0 "
Toggle iPWRSEQ_RDDATA "net iPWRSEQ_RDDATA[31:0]"
Toggle iRO_PWRSEQ_TEST_DEBUG_DATA "net iRO_PWRSEQ_TEST_DEBUG_DATA[31:0]"
ANNOTATION_END
ANNOTATION: " tied to 32'h005A5A5A "
Toggle iRO_PWRSEQ_DEBUG_ID "net iRO_PWRSEQ_DEBUG_ID[31:0]"
ANNOTATION_BEGIN: " obsolete feature "
Toggle 1to0 oQ_PANEL_SYNCEN "net oQ_PANEL_SYNCEN"
Toggle oQ_PANEL_SYNCEN_OVRD "net oQ_PANEL_SYNCEN_OVRD"
Toggle 1to0 oQ_PANEL_SYNCEN_POL "net oQ_PANEL_SYNCEN_POL"
Toggle 1to0 Q_PANEL_SYNCEN "net Q_PANEL_SYNCEN"
Toggle Q_PANEL_SYNCEN_OVRD "net Q_PANEL_SYNCEN_OVRD"
Toggle 1to0 Q_PANEL_SYNCEN_POL "net Q_PANEL_SYNCEN_POL"
ANNOTATION_END
ANNOTATION_BEGIN: " default value is 0, so 0->1 testing is good "
Toggle 1to0 oQ_PANEL_DIGON_OVRD "net oQ_PANEL_DIGON_OVRD"
Toggle 1to0 oQ_PANEL_DIGON_POL "net oQ_PANEL_DIGON_POL"
Toggle 1to0 oQ_PANEL_BLON_OVRD "net oQ_PANEL_BLON_OVRD"
Toggle 1to0 Q_PANEL_DIGON_OVRD "net Q_PANEL_DIGON_OVRD"
Toggle 1to0 Q_PANEL_DIGON_POL "net Q_PANEL_DIGON_POL"
Toggle 1to0 Q_PANEL_BLON_OVRD "net Q_PANEL_BLON_OVRD"
ANNOTATION_END
ANNOTATION_BEGIN: " covers everycase should be enough "
Toggle 1to0 oQ_PWRSEQ_DBG_DATA_SEL [1] "net oQ_PWRSEQ_DBG_DATA_SEL[2:0]"
Toggle 1to0 Q_PWRSEQ_DBG_DATA_SEL [1] "net Q_PWRSEQ_DBG_DATA_SEL[2:0]"
ANNOTATION_END
ANNOTATION_BEGIN: " spare register "
Toggle oQ_PWRSEQ_SPARE "net oQ_PWRSEQ_SPARE[31:0]"
Toggle Q_PWRSEQ_SPARE "net Q_PWRSEQ_SPARE[31:0]"
ANNOTATION_END
ANNOTATION: " unused, unconnected "
Toggle oDECODE_NACK "net oDECODE_NACK"
ANNOTATION_BEGIN: " internal to pwrseqregs, these are auto generated by auto reg, we assume they are already verified and we only check top level toggling "
Toggle DECODE_NACK_q1 "reg DECODE_NACK_q1"
Toggle DECODE_NACK_q2 "reg DECODE_NACK_q2"
Toggle DISPDEC_NACK "net DISPDEC_NACK"
Toggle PWRSEQDEBUGIND_ACK "net PWRSEQDEBUGIND_ACK"
Toggle PWRSEQDEBUGIND_NACK "net PWRSEQDEBUGIND_NACK"
Toggle RD_REG_PWRSEQ_TEST_DEBUG_DATA "net RD_REG_PWRSEQ_TEST_DEBUG_DATA"
Toggle RD_REG_PWRSEQ_DEBUG_ID "net RD_REG_PWRSEQ_DEBUG_ID"
Toggle DEC_IND_DATA_PWRSEQ_TEST_DEBUG_DATA "net DEC_IND_DATA_PWRSEQ_TEST_DEBUG_DATA"
Toggle Q_PWRSEQ_TEST_DEBUG_DATA "net Q_PWRSEQ_TEST_DEBUG_DATA[31:0]"
ANNOTATION_END
